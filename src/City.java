import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;


//Данное задание не является обязательным для решения. Вы можете выполнить его для дополнительной тренировки навыка по данной теме
//
//Создайте класс Город (City), которая будет представлять собой точку на карте со следующими характеристиками:
//
//Название Города: строка
//Набор путей к следующим городам, где путь представляет собой сочетание Города и стоимости поездки в него
//При создании Город требует указать название и можно (но не обязательно) указывать набор путей
//Город может возвращать текстовое представление, в виде названия Города и списка связанных с ним Городов (в виде пары: “название: стоимость”)
//Городу в любой момент можно добавить новый путь в другой город, указав либо сам путь, либо пару Город-цена
//Город должен иметь метод путешествия (travelBy). Такой метод принимает число n, который обозначает количество переходов. Проще говоря, в текущем списке путей берется первый город, из его списка путей так же берется первый город, из списка путей которого в свою очередь берется город и так далее до тех пор, пока либо количество городов не станет равным n, либо у текущего города не окажется путей. Метод возвращает последний Город пути или null если мы попали в тупик
//Используя
//разработанную сущность реализуйте схему, представленную на рисунке 1.


public class City {
    String name;

    public static class Connection {
        City name;
        int cost;

        public Connection(String name, int cost) {
            if (!name.exists(name)) {
                this.name = new City(name);
            } else {
                this.name = name;
            }
            this.cost = cost;
        }

    }

    List<Connection> connection = new ArrayList<>();


    public City(String name) {
        this.name = name;
    }

    public City(String name, Connection... connections) {
        this.name = name;

        this.connection = Arrays.stream(connections).toList();

    }

    public boolean exists(City name) {
        return true;
    }
}
